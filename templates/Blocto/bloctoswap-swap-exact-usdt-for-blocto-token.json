{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "09f4ba4e5eda1996e44ee7865eddba96562073e5423b5aea5e3c0db94551a8d6",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "BloctoSwap Swap exact usdt for blocto token"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Swap {amountIn} tUSDT for at least {minAmountOut} BLT",
                    "zh-CN": "将 {amountIn} tUSDT 兑换成至少 {minAmountOut} BLT",
                    "zh-TW": "將 {amountIn} tUSDT 兌換成至少 {minAmountOut} BLT"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport TeleportedTetherToken from 0xTELEPORTED_USDT_ADDRESS\nimport BloctoToken from 0xBLOCTO_TOKEN_ADDRESS\nimport BltUsdtSwapPair from 0xBLT_USDT_SWAP_PAIR_ADDRESS\n\ntransaction(amountIn: UFix64, minAmountOut: UFix64) {\n  prepare(signer: AuthAccount) {\n    \n    \n\n    let teleportedTetherTokenVault = signer.borrow<&TeleportedTetherToken.Vault>(from: TeleportedTetherToken.TokenStoragePath) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    let token0Vault <- teleportedTetherTokenVault.withdraw(amount: amountIn) as! @TeleportedTetherToken.Vault\n    let token1Vault <- BltUsdtSwapPair.swapToken2ForToken1(from: <- token0Vault)\n\n      if signer.borrow<&BloctoToken.Vault>(from: /storage/bloctoTokenVault) == nil {\n    signer.save(<-BloctoToken.createEmptyVault(), to: /storage/bloctoTokenVault)\n    signer.link<&BloctoToken.Vault{FungibleToken.Receiver}>(\n      /public/bloctoTokenReceiver,\n      target: /storage/bloctoTokenVault\n    )\n    signer.link<&BloctoToken.Vault{FungibleToken.Balance}>(\n      /public/bloctoTokenBalance,\n      target: /storage/bloctoTokenVault\n    )\n  }\n    let bloctoTokenVault = signer.borrow<&BloctoToken.Vault>(from: /storage/bloctoTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    assert(token1Vault.balance >= minAmountOut, message: \"Output amount too small\")\n\n    bloctoTokenVault.deposit(from: <- token1Vault)\n  }\n}",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 139076112
                    }
                }
            },
            "0xTELEPORTED_USDT_ADDRESS": {
                "TeleportedTetherToken": {
                    "testnet": {
                        "address": "0xab26e0a07d770ec1",
                        "contract": "TeleportedTetherToken",
                        "fq_address": "A.0xab26e0a07d770ec1.TeleportedTetherToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076126
                    }
                }
            },
            "0xBLOCTO_TOKEN_ADDRESS": {
                "BloctoToken": {
                    "testnet": {
                        "address": "0x6e0797ac987005f5",
                        "contract": "BloctoToken",
                        "fq_address": "A.0x6e0797ac987005f5.BloctoToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076133
                    }
                }
            },
            "0xBLT_USDT_SWAP_PAIR_ADDRESS": {
                "BltUsdtSwapPair": {
                    "testnet": {
                        "address": "0xc59604d4e65f14b3",
                        "contract": "BltUsdtSwapPair",
                        "fq_address": "A.0xc59604d4e65f14b3.BltUsdtSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139076162
                    }
                }
            }
        },
        "arguments": {
            "amountIn": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            },
            "minAmountOut": {
                "index": 1,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}