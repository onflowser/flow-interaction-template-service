{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "7974b1cf73751dc1c09adefa30d956f51a2cf32f646927009fc1a9282cb37f8b",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "staking Stake"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Stake {amount} STARLY tokens"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport MetadataViews from 0xMETADATA_VIEWS_ADDRESS\nimport NonFungibleToken from 0xNON_FUNGIBLE_TOKEN_ADDRESS\nimport StarlyToken from 0xSTARLY_TOKEN_ADDRESS\nimport StarlyTokenStaking from 0xSTARLY_TOKEN_STAKING_ADDRESS\n\ntransaction(amount: UFix64) {\n    let vaultRef: &StarlyToken.Vault\n    let stakeCollectionRef: &StarlyTokenStaking.Collection\n\n    prepare(acct: AuthAccount) {\n        self.vaultRef = acct.borrow<&StarlyToken.Vault>(from: StarlyToken.TokenStoragePath)\n            ?? panic(\"Could not borrow reference to the owner's StarlyToken vault!\")\n\n        if acct.borrow<&StarlyTokenStaking.Collection>(from: StarlyTokenStaking.CollectionStoragePath) == nil {\n            acct.save(<-StarlyTokenStaking.createEmptyCollection(), to: StarlyTokenStaking.CollectionStoragePath)\n            acct.link<&StarlyTokenStaking.Collection{NonFungibleToken.CollectionPublic, MetadataViews.ResolverCollection, StarlyTokenStaking.CollectionPublic}>(\n                StarlyTokenStaking.CollectionPublicPath,\n                target: StarlyTokenStaking.CollectionStoragePath)\n        }\n        self.stakeCollectionRef = acct.borrow<&StarlyTokenStaking.Collection>(from: StarlyTokenStaking.CollectionStoragePath)\n            ?? panic(\"Could not borrow reference to the owner's StarlyTokenStaking collection!\")\n    }\n\n    execute {\n        let vault <- self.vaultRef.withdraw(amount: amount) as! @StarlyToken.Vault\n        self.stakeCollectionRef.stake(principalVault: <-vault)\n    }\n}\n",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 138897944
                    }
                }
            },
            "0xMETADATA_VIEWS_ADDRESS": {
                "MetadataViews": {
                    "testnet": {
                        "address": "0x631e88ae7f1d7c20",
                        "contract": "MetadataViews",
                        "fq_address": "A.0x631e88ae7f1d7c20.MetadataViews",
                        "pin": "ba061d95016d5506e9f5d1afda15d82eb066aa8b0552e8b26dc7950fa5714d51",
                        "pin_block_height": 138897979
                    }
                }
            },
            "0xNON_FUNGIBLE_TOKEN_ADDRESS": {
                "NonFungibleToken": {
                    "testnet": {
                        "address": "0x631e88ae7f1d7c20",
                        "contract": "NonFungibleToken",
                        "fq_address": "A.0x631e88ae7f1d7c20.NonFungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 138897999
                    }
                }
            },
            "0xSTARLY_TOKEN_ADDRESS": {
                "StarlyToken": {
                    "testnet": {
                        "address": "0xf63219072aaddd50",
                        "contract": "StarlyToken",
                        "fq_address": "A.0xf63219072aaddd50.StarlyToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 138898006
                    }
                }
            },
            "0xSTARLY_TOKEN_STAKING_ADDRESS": {
                "StarlyTokenStaking": {
                    "testnet": {
                        "address": "0x8d1cf508d398c5c2",
                        "contract": "StarlyTokenStaking",
                        "fq_address": "A.0x8d1cf508d398c5c2.StarlyTokenStaking",
                        "pin": "751fcffa1f40d4edff5f6cff49d14e6b67bbd33cad3d2dd61fdc04ce97db4a4a",
                        "pin_block_height": 138898128
                    }
                }
            }
        },
        "arguments": {
            "amount": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}