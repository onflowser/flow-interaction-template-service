{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "833cb399f8e2ef7346d1f9c2180b1a40b58ac3f6b8f80edae8ecb091647e5867",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "BloctoSwap Swap blocto token for exact fusd"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Swap {maxAmountIn} BLT for at least {amountOut} FUSD",
                    "zh-CN": "将最多 {maxAmountIn} BLT 兑换成 {amountOut} FUSD",
                    "zh-TW": "將最多 {maxAmountIn} BLT 兌換成 {amountOut} FUSD"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport BloctoToken from 0xBLOCTO_TOKEN_ADDRESS\nimport FUSD from 0xFUSD_ADDRESS\nimport BltUsdtSwapPair from 0xBLT_USDT_SWAP_PAIR_ADDRESS\nimport FusdUsdtSwapPair from 0xFUSD_USDT_SWAP_ADDRESS\n\ntransaction(maxAmountIn: UFix64, amountOut: UFix64) {\n  prepare(signer: AuthAccount) {\n    let amount0 = FusdUsdtSwapPair.quoteSwapToken2ForExactToken1(amount: amountOut) / (1.0 - FusdUsdtSwapPair.getFeePercentage())\nlet amountIn = BltUsdtSwapPair.quoteSwapToken1ForExactToken2(amount: amount0) / (1.0 - BltUsdtSwapPair.getFeePercentage())\n    assert(amountIn <= maxAmountIn, message: \"Input amount too large\")\n\n    let bloctoTokenVault = signer.borrow<&BloctoToken.Vault>(from: /storage/bloctoTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    let token0Vault <- bloctoTokenVault.withdraw(amount: amountIn) as! @BloctoToken.Vault\n    let token1Vault <- BltUsdtSwapPair.swapToken1ForToken2(from: <- token0Vault)\nlet token2Vault <- FusdUsdtSwapPair.swapToken2ForToken1(from: <- token1Vault)\n\n      if signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) == nil {\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n    let fusdVault = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    \n\n    fusdVault.deposit(from: <- token2Vault)\n  }\n}",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 139075795
                    }
                }
            },
            "0xBLOCTO_TOKEN_ADDRESS": {
                "BloctoToken": {
                    "testnet": {
                        "address": "0x6e0797ac987005f5",
                        "contract": "BloctoToken",
                        "fq_address": "A.0x6e0797ac987005f5.BloctoToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139075828
                    }
                }
            },
            "0xFUSD_ADDRESS": {
                "FUSD": {
                    "testnet": {
                        "address": "0xe223d8a629e49c68",
                        "contract": "FUSD",
                        "fq_address": "A.0xe223d8a629e49c68.FUSD",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139075859
                    }
                }
            },
            "0xBLT_USDT_SWAP_PAIR_ADDRESS": {
                "BltUsdtSwapPair": {
                    "testnet": {
                        "address": "0xc59604d4e65f14b3",
                        "contract": "BltUsdtSwapPair",
                        "fq_address": "A.0xc59604d4e65f14b3.BltUsdtSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139075902
                    }
                }
            },
            "0xFUSD_USDT_SWAP_ADDRESS": {
                "FusdUsdtSwapPair": {
                    "testnet": {
                        "address": "0x3502a5dacaf350bb",
                        "contract": "FusdUsdtSwapPair",
                        "fq_address": "A.0x3502a5dacaf350bb.FusdUsdtSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139075933
                    }
                }
            }
        },
        "arguments": {
            "maxAmountIn": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            },
            "amountOut": {
                "index": 1,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}