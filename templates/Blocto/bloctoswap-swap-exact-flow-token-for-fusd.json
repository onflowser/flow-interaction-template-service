{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "ed8071162f96948f2235dd7aab156a4d5b4910fa6a8b35f599b03008ac23f008",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "BloctoSwap Swap exact flow token for fusd"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Swap {amountIn} FLOW for at least {minAmountOut} FUSD",
                    "zh-CN": "将 {amountIn} FLOW 兑换成至少 {minAmountOut} FUSD",
                    "zh-TW": "將 {amountIn} FLOW 兌換成至少 {minAmountOut} FUSD"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport FlowToken from 0xFLOW_TOKEN_ADDRESS\nimport FUSD from 0xFUSD_ADDRESS\nimport FlowSwapPair from 0xFLOW_USDT_SWAP_ADDRESS\nimport FusdUsdtSwapPair from 0xFUSD_USDT_SWAP_ADDRESS\n\ntransaction(amountIn: UFix64, minAmountOut: UFix64) {\n  prepare(signer: AuthAccount) {\n    \n    \n\n    let flowTokenVault = signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    let token0Vault <- flowTokenVault.withdraw(amount: amountIn) as! @FlowToken.Vault\n    let token1Vault <- FlowSwapPair.swapToken1ForToken2(from: <- token0Vault)\nlet token2Vault <- FusdUsdtSwapPair.swapToken2ForToken1(from: <- token1Vault)\n\n      if signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) == nil {\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n    let fusdVault = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    assert(token2Vault.balance >= minAmountOut, message: \"Output amount too small\")\n\n    fusdVault.deposit(from: <- token2Vault)\n  }\n}",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 139076019
                    }
                }
            },
            "0xFLOW_TOKEN_ADDRESS": {
                "FlowToken": {
                    "testnet": {
                        "address": "0x7e60df042a9c0868",
                        "contract": "FlowToken",
                        "fq_address": "A.0x7e60df042a9c0868.FlowToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076031
                    }
                }
            },
            "0xFUSD_ADDRESS": {
                "FUSD": {
                    "testnet": {
                        "address": "0xe223d8a629e49c68",
                        "contract": "FUSD",
                        "fq_address": "A.0xe223d8a629e49c68.FUSD",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076046
                    }
                }
            },
            "0xFLOW_USDT_SWAP_ADDRESS": {
                "FlowSwapPair": {
                    "testnet": {
                        "address": "0xd9854329b7edf136",
                        "contract": "FlowSwapPair",
                        "fq_address": "A.0xd9854329b7edf136.FlowSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139076066
                    }
                }
            },
            "0xFUSD_USDT_SWAP_ADDRESS": {
                "FusdUsdtSwapPair": {
                    "testnet": {
                        "address": "0x3502a5dacaf350bb",
                        "contract": "FusdUsdtSwapPair",
                        "fq_address": "A.0x3502a5dacaf350bb.FusdUsdtSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139076103
                    }
                }
            }
        },
        "arguments": {
            "amountIn": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            },
            "minAmountOut": {
                "index": 1,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}