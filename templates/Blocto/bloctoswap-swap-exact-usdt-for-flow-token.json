{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "7f1b70f3f91eefe263ab6692637f1ae1e068a33e6edcfc5ee0f23f9718b8e2d6",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "BloctoSwap Swap exact usdt for flow token"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Swap {amountIn} tUSDT for at least {minAmountOut} FLOW",
                    "zh-CN": "将 {amountIn} tUSDT 兑换成至少 {minAmountOut} FLOW",
                    "zh-TW": "將 {amountIn} tUSDT 兌換成至少 {minAmountOut} FLOW"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport TeleportedTetherToken from 0xTELEPORTED_USDT_ADDRESS\nimport FlowToken from 0xFLOW_TOKEN_ADDRESS\nimport FlowSwapPair from 0xFLOW_USDT_SWAP_ADDRESS\n\ntransaction(amountIn: UFix64, minAmountOut: UFix64) {\n  prepare(signer: AuthAccount) {\n    \n    \n\n    let teleportedTetherTokenVault = signer.borrow<&TeleportedTetherToken.Vault>(from: TeleportedTetherToken.TokenStoragePath) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    let token0Vault <- teleportedTetherTokenVault.withdraw(amount: amountIn) as! @TeleportedTetherToken.Vault\n    let token1Vault <- FlowSwapPair.swapToken2ForToken1(from: <- token0Vault)\n\n      if signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) == nil {\n    signer.save(<-FlowToken.createEmptyVault(), to: /storage/flowTokenVault)\n    signer.link<&FlowToken.Vault{FungibleToken.Receiver}>(\n      /public/flowTokenReceiver,\n      target: /storage/flowTokenVault\n    )\n    signer.link<&FlowToken.Vault{FungibleToken.Balance}>(\n      /public/flowTokenBalance,\n      target: /storage/flowTokenVault\n    )\n  }\n    let flowTokenVault = signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    assert(token1Vault.balance >= minAmountOut, message: \"Output amount too small\")\n\n    flowTokenVault.deposit(from: <- token1Vault)\n  }\n}",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 139076123
                    }
                }
            },
            "0xTELEPORTED_USDT_ADDRESS": {
                "TeleportedTetherToken": {
                    "testnet": {
                        "address": "0xab26e0a07d770ec1",
                        "contract": "TeleportedTetherToken",
                        "fq_address": "A.0xab26e0a07d770ec1.TeleportedTetherToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076133
                    }
                }
            },
            "0xFLOW_TOKEN_ADDRESS": {
                "FlowToken": {
                    "testnet": {
                        "address": "0x7e60df042a9c0868",
                        "contract": "FlowToken",
                        "fq_address": "A.0x7e60df042a9c0868.FlowToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139076144
                    }
                }
            },
            "0xFLOW_USDT_SWAP_ADDRESS": {
                "FlowSwapPair": {
                    "testnet": {
                        "address": "0xd9854329b7edf136",
                        "contract": "FlowSwapPair",
                        "fq_address": "A.0xd9854329b7edf136.FlowSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139076166
                    }
                }
            }
        },
        "arguments": {
            "amountIn": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            },
            "minAmountOut": {
                "index": 1,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}