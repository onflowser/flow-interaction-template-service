{
    "f_type": "InteractionTemplate",
    "f_version": "1.0.0",
    "id": "5f137a15e071cee7f7adbe9b89a8aaefefde7fecd0b38573f793dc45ecf3a7b3",
    "data": {
        "type": "InteractionTemplate",
        "interface": "",
        "messages": {
            "title": {
                "i18n": {
                    "en-US": "BloctoSwap Swap exact blocto token for flow"
                }
            },
            "description": {
                "i18n": {
                    "en-US": "Swap {amountIn} BLT for at least {minAmountOut} FLOW",
                    "zh-CN": "将 {amountIn} BLT 兑换成至少 {minAmountOut} FLOW",
                    "zh-TW": "將 {amountIn} BLT 兌換成至少 {minAmountOut} FLOW"
                }
            }
        },
        "cadence": "import FungibleToken from 0xFUNGIBLE_TOKEN_ADDRESS\nimport BloctoToken from 0xBLOCTO_TOKEN_ADDRESS\nimport FlowToken from 0xFLOW_TOKEN_ADDRESS\nimport BltUsdtSwapPair from 0xBLT_USDT_SWAP_PAIR_ADDRESS\nimport FlowSwapPair from 0xFLOW_USDT_SWAP_ADDRESS\n\ntransaction(amountIn: UFix64, minAmountOut: UFix64) {\n  prepare(signer: AuthAccount) {\n    \n    \n\n    let bloctoTokenVault = signer.borrow<&BloctoToken.Vault>(from: /storage/bloctoTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    let token0Vault <- bloctoTokenVault.withdraw(amount: amountIn) as! @BloctoToken.Vault\n    let token1Vault <- BltUsdtSwapPair.swapToken1ForToken2(from: <- token0Vault)\nlet token2Vault <- FlowSwapPair.swapToken2ForToken1(from: <- token1Vault)\n\n      if signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) == nil {\n    signer.save(<-FlowToken.createEmptyVault(), to: /storage/flowTokenVault)\n    signer.link<&FlowToken.Vault{FungibleToken.Receiver}>(\n      /public/flowTokenReceiver,\n      target: /storage/flowTokenVault\n    )\n    signer.link<&FlowToken.Vault{FungibleToken.Balance}>(\n      /public/flowTokenBalance,\n      target: /storage/flowTokenVault\n    )\n  }\n    let flowTokenVault = signer.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault) \n      ?? panic(\"Could not borrow a reference to Vault\")\n\n    assert(token2Vault.balance >= minAmountOut, message: \"Output amount too small\")\n\n    flowTokenVault.deposit(from: <- token2Vault)\n  }\n}",
        "dependencies": {
            "0xFUNGIBLE_TOKEN_ADDRESS": {
                "FungibleToken": {
                    "testnet": {
                        "address": "0x9a0766d93b6608b7",
                        "contract": "FungibleToken",
                        "fq_address": "A.0x9a0766d93b6608b7.FungibleToken",
                        "pin": "83c9e3d61d3b5ebf24356a9f17b5b57b12d6d56547abc73e05f820a0ae7d9cf5",
                        "pin_block_height": 139075894
                    }
                }
            },
            "0xBLOCTO_TOKEN_ADDRESS": {
                "BloctoToken": {
                    "testnet": {
                        "address": "0x6e0797ac987005f5",
                        "contract": "BloctoToken",
                        "fq_address": "A.0x6e0797ac987005f5.BloctoToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139075907
                    }
                }
            },
            "0xFLOW_TOKEN_ADDRESS": {
                "FlowToken": {
                    "testnet": {
                        "address": "0x7e60df042a9c0868",
                        "contract": "FlowToken",
                        "fq_address": "A.0x7e60df042a9c0868.FlowToken",
                        "pin": "0326c320322c4e8dde768ba2975c384184fb7e41765c2c87e79a2040bfc71be8",
                        "pin_block_height": 139075920
                    }
                }
            },
            "0xBLT_USDT_SWAP_PAIR_ADDRESS": {
                "BltUsdtSwapPair": {
                    "testnet": {
                        "address": "0xc59604d4e65f14b3",
                        "contract": "BltUsdtSwapPair",
                        "fq_address": "A.0xc59604d4e65f14b3.BltUsdtSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139075964
                    }
                }
            },
            "0xFLOW_USDT_SWAP_ADDRESS": {
                "FlowSwapPair": {
                    "testnet": {
                        "address": "0xd9854329b7edf136",
                        "contract": "FlowSwapPair",
                        "fq_address": "A.0xd9854329b7edf136.FlowSwapPair",
                        "pin": "9524cc8b5eb8bb8f7d8cf4ee3c65374cafa55921d31d6f72ce08d1c4da8aad57",
                        "pin_block_height": 139076001
                    }
                }
            }
        },
        "arguments": {
            "amountIn": {
                "index": 0,
                "type": "UFix64",
                "messages": {}
            },
            "minAmountOut": {
                "index": 1,
                "type": "UFix64",
                "messages": {}
            }
        }
    }
}